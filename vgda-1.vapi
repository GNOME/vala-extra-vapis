/* vgda-1.vapi generated by valac 0.44.3, do not modify. */

[CCode (gir_namespace = "Vgda", gir_version = "1")]
namespace Vgda {
	[CCode (cheader_filename = "vgda.h")]
	public class GDataModelIterable : Gee.AbstractCollection<GLib.Value?>, Gda.DataModel {
		public GDataModelIterable (Gda.DataModel model);
		public override bool add (GLib.Value? item);
		public int append_row () throws GLib.Error;
		public int append_values (GLib.List<GLib.Value?>? values) throws GLib.Error;
		public override void clear ();
		public override bool contains (GLib.Value? item);
		public Gda.DataModelIter create_iter ();
		public unowned Gda.Column? describe_column (int col);
		public new bool @foreach (Gee.ForallFunc<GLib.Value?> f);
		public void freeze ();
		public Gda.DataModelAccessFlags get_access_flags ();
		public Gda.ValueAttribute get_attributes_at (int col, int row);
		public unowned GLib.Error[] get_exceptions ();
		public int get_n_columns ();
		public int get_n_rows ();
		public bool get_notify ();
		public int get_row_from_values (GLib.SList<GLib.Value?> values, [CCode (array_length = false)] int[] cols_index);
		public unowned GLib.Value? get_value_at (int col, int row) throws GLib.Error;
		public bool iter_at_row (Gda.DataModelIter iter, int row);
		public bool iter_next (Gda.DataModelIter iter);
		public bool iter_prev (Gda.DataModelIter iter);
		public bool iter_set_value (Gda.DataModelIter iter, int col, GLib.Value value) throws GLib.Error;
		public override Gee.Iterator<GLib.Value?> iterator ();
		public override bool remove (GLib.Value? item);
		public bool remove_row (int row) throws GLib.Error;
		public void send_hint (Gda.DataModelHint hint, GLib.Value? hint_value);
		public void set_notify (bool do_notify_changes);
		public bool set_value_at (int col, int row, GLib.Value value) throws GLib.Error;
		public bool set_values (int row, GLib.List<GLib.Value?>? values) throws GLib.Error;
		public void thaw ();
		public override bool read_only { get; }
		public override Gee.Collection<GLib.Value?> read_only_view { owned get; }
		public override int size { get; }
	}
	[CCode (cheader_filename = "vgda.h")]
	public class GDataModelIterator : GLib.Object, Gee.Traversable<GLib.Value?>, Gee.Iterator<GLib.Value?> {
		public GDataModelIterator (Gda.DataModel model);
		public int current_column { get; }
		public int current_row { get; }
	}
	[CCode (cheader_filename = "vgda.h")]
	public class GProvider : GLib.Object, Vda.Connection {
		protected string _cnc_string;
		protected string _provider;
		protected Vda.Connection.Status _status;
		public GProvider ();
		public virtual Vda.Role? current_user ();
		public string value_to_string (GLib.Value val);
		public Gda.Connection cnc { get; }
	}
}
